#include<bits/stdc++.h>
using namespace std;
int find(int arr[],int i,int prev,int n)
{
    if(i==n)
        return 0;
    int a=0,b=0,c=0;
    if(arr[i] > prev)
        a = 1 + find(arr,i+1,arr[i],n);
    
    b = find(arr,i+1,prev,n);
    return max(a,b);
}
int find_dp(int arr[],int n)
{
    int dp[n];
    int i,j;
    for(i=0;i<n;i++)
        dp[i] = 1;
    int m = 0;
    for(i = 1;i<n;i++)
    {
        for(j=0;j<i;j++)
        {
            if(arr[j] < arr[i])
                dp[i] = max(1 + dp[j],dp[i]);
        }
        if(m < dp[i])
            m = dp[i];
    }
    return m;
}
int find_logn(int arr[], int n)
{
	std::set<int> s;
	for(int i=0;i<n;i++)
	{
		auto ret = s.insert(arr[i]);
		set<int>:: iterator it;
		
		if(ret.second)
			it = ret.first;
		else
		    continue;
		if(++it != s.end())
			s.erase(it);
	}
	return s.size();
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        int arr[n];
        int i;
        for(i=0;i<n;i++)
            cin>>arr[i];
        // cout<<find(arr,0,INT_MIN,n)<<endl;
        //cout<<find_dp(arr,n)<<endl;
        cout<<find_logn(arr,n)<<endl;
    }
	return 0;
}
