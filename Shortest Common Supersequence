#include<bits/stdc++.h>
using namespace std;
int find(string str1, int i,int m,string str2, int j,int n)
{
    if(i==m)
        return n - j;
    if(j==n)
        return m - i;
    if(str1[i] == str2[j])
        return 1 + find(str1,i+1,m,str2,j+1,n);
    
    return min(2 + find(str1,i+1,m,str2,j+1,n), min( 1 + find(str1,i+1,m,str2,j,n), 1 + find(str1,i,m,str2,j+1,n)));
}

int find_dp(string str1, int m, string str2, int n)
{
    int dp[m+1][n+1];
    int i,j;
    dp[0][0] = 0;
    for(i=1;i<=n;i++)
        dp[0][i] = i;
    for(i=1;i<=m;i++)
        dp[i][0] = i;
        
    for(i=1;i<=m;i++)
    {
        for(j=1;j<=n;j++)
        {
            if(str1[i-1] == str2[j-1])
                dp[i][j] = 1 + dp[i-1][j-1];
            else
            {
                dp[i][j] = min(2 + dp[i-1][j-1], min(1 + dp[i-1][j], 1 + dp[i][j-1]));
            }
        }
    }
    // for(i=0;i<=m;i++)
    // {
    //     for(j=0;j<=n;j++)
    //         cout<<dp[i][j]<<" ";
    //     cout<<endl;
    // }
    return dp[m][n];
}

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        string str1,str2;
        cin>>str1>>str2;
        //cout<<find(str1,0,str1.length(),str2,0,str2.length())<<endl;
        cout<<find_dp(str1,str1.length(),str2,str2.length())<<endl;
    }
	return 0;
}
