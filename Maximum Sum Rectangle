#include<bits/stdc++.h>
using namespace std;
struct element
{
    int low,high,sum;
};
element kadane(int arr[],int n)
{
    int i,current,global;
	int low,high;
	current = global = arr[0];
	low = 0;
	high = 0;
	int start=0,end=0;
	for(i=1;i<n;i++)
	{
		if(current + arr[i] < arr[i])
		{
			current = arr[i];
			low = i;
			high = i;
		}
		else
		{
			current = current + arr[i];
			high++;
		}
			
		
		if(global < current)
		{
			global = current;
			start = low;
			end = high;
		}
	}
	
	return {low, high, global};
}


int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int m,n;
        cin>>m>>n;
        int mat[m][n];
        int i,j;
        for(i=0;i<m;i++)
        {
            for(j=0;j<n;j++)
                cin>>mat[i][j];
        }
        
        int temp[m];
        int left = 0,right;
        int maxsum = 0;
        for(left = 0;left<n;left++)
        {
            memset(temp,0,sizeof(temp));
            for(right = left;right<n;right++)
            {
                for(i=0;i<m;i++)
                {
                    temp[i] += mat[i][right];
                }
                
                int top,bottom,sum;
                element data = kadane(temp,m);
                top = data.low;  bottom = data.high;  sum = data.sum;
                //int sum = f(temp,m);
                
                maxsum = max(sum, maxsum);
            }
        }
        
        cout<<maxsum<<endl;
    }
	return 0;
}
