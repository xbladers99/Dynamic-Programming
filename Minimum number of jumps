
/*Given an array of integers where each element represents the max number of steps 
that can be made forward from that element.
Write a function to return the minimum number of jumps
to reach the end of the array (starting from the first element).
If an element is 0, then cannot move through that element.*/


#include<bits/stdc++.h>
using namespace std;
int find(int arr[],int n)
{
    int lookup[n];
    if(arr[0]==0)
        return -1;
    lookup[n-1] = 0;
    for(int i=n-2;i>=0;i--)
    {
        if(arr[i] == 0)
            lookup[i] = -1;
        else
        {
            if(i + arr[i]>=n-1)
                lookup[i] = 1;
            else
            {
                int min_so_far=INT_MAX;
                for(int j=i+1;j<=i+arr[i];j++)
                {
                    if(lookup[j]== -1)
                        continue;
                    int m = 1 + lookup[j];
                    min_so_far = min(min_so_far, m);
                }
                if(min_so_far == INT_MAX)
                    lookup[i] = -1;
                else
                    lookup[i] = min_so_far;
            }
        }
    }
    return lookup[0];
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n,i;
        cin>>n;
        int arr[n];
        for(i=0;i<n;i++)
            cin>>arr[i];
        
        cout<<find(arr,n)<<endl;
    }
	return 0;
}
